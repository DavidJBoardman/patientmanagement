# Generated by Django 2.1.2 on 2019-03-29 00:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllergyDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergytype', models.CharField(blank=True, choices=[('Drug', 'Drug'), ('Food', 'Food'), ('Environmental', 'Environmental'), ('Inhalant', 'Inhalant'), ('Insect', 'Insect'), ('Plant', 'Plant'), ('Other', 'Other (Specify)')], max_length=256, verbose_name='Allergy type')),
                ('allergyagent', models.CharField(blank=True, choices=[('Propensity to adverse reaction (disorder)', 'Propensity to adverse reaction (disorder)'), ('Propensity to adverse reaction to drug (disorder)', 'Propensity to adverse reaction to drug (disorder)'), ('Propensity to adverse reaction to food (disorder)', 'Propensity to adverse reaction to food (disorder)'), ('Allergy to substance (disorder)', 'Allergy to substance (disorder)'), ('Drug allergy (disorder)', 'Drug allergy (disorder)'), ('Food allergy (disorder)', 'Food allergy (disorder)'), ('Drug intolerance (disorder)', 'Drug intolerance (disorder)'), ('Food intolerance (disorder)', 'Food intolerance (disorder)')], max_length=256, verbose_name='Allergy Agent')),
                ('allergyreaction', models.CharField(blank=True, max_length=256, verbose_name='Allergy reaction')),
                ('reactionseverity', models.CharField(blank=True, choices=[('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe')], max_length=256, verbose_name='Reaction severity')),
                ('allergyinfosource', models.CharField(blank=True, choices=[('Practice Reported', 'Practice Reported'), ('Patient Reported', 'Patient Reported'), ('Allergy history', 'Allergy history'), ('Transition of care/referral', 'Transition of care/referral')], max_length=256, verbose_name='Allergy Info Source')),
                ('allergystatus', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Resolved', 'Resolved')], max_length=256, verbose_name='Status')),
                ('allergyrecorddatetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AssignedPatient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previousdiagnosis', models.CharField(max_length=256, verbose_name='Diagnosis')),
                ('diagnoseddatetime', models.DateTimeField(verbose_name='Diagnosis Date')),
                ('treatment', models.CharField(max_length=256, verbose_name='Treatment administered')),
                ('treatmentdatetime', models.DateTimeField(verbose_name='Treatment Date')),
                ('result', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorDetails',
            fields=[
                ('doctorid', models.AutoField(primary_key=True, serialize=False)),
                ('doctortitle', models.CharField(max_length=256)),
                ('doctorfirstname', models.CharField(max_length=256)),
                ('doctorlastname', models.CharField(max_length=256)),
                ('specialty', models.CharField(max_length=256)),
                ('wardlocation', models.CharField(max_length=256)),
                ('phonenumber', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='FamilyHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allgergies', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Allergies')),
                ('asthma', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Asthma')),
                ('arthritis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Arthritis')),
                ('glaucoma', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Glaucoma')),
                ('cancer', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Cancer')),
                ('tuberculosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Tuberculosis')),
                ('diabetes', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Diabetes')),
                ('hearttrouble', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Heart Trouble')),
                ('highbloodpressure', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='High Blood Pressure')),
                ('stroke', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Stroke')),
                ('epilepsy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Epilepsy')),
                ('substanceabuse', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Substance Abuse')),
                ('depression', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Depression')),
                ('emotionalproblems', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Emotional Problems')),
                ('suicide', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Suicide')),
                ('kidneytrouble', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Kidney Trouble')),
                ('thyroiddisease', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Thyroid Disease')),
            ],
        ),
        migrations.CreateModel(
            name='GuardianDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guardiantitle', models.CharField(blank=True, choices=[('MR', 'Mr.'), ('MRS', 'Mrs.'), ('MS', 'Ms.'), ('DR', 'Dr.'), ('SIR', 'Sir.')], max_length=256, verbose_name='Title')),
                ('guardianfirstname', models.CharField(max_length=256, verbose_name='First Name')),
                ('guardianlastname', models.CharField(max_length=256, verbose_name='Last Name')),
                ('patientrelation', models.CharField(blank=True, max_length=256, verbose_name='Patient Relation')),
                ('address', models.CharField(blank=True, max_length=256, verbose_name='Address')),
                ('contactnumber', models.CharField(blank=True, max_length=256, verbose_name='Contact Number')),
                ('email', models.CharField(blank=True, max_length=256, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='Immunisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccinename', models.CharField(choices=[('BCG', 'BCG'), ('Hepatitis A', 'Hepatitis A'), ('Hepatitis B', 'Hepatitis B'), ('Rotavirus', 'Rotavirus'), ('Diphtheria-Tetanus-Pertussis', 'Diphtheria-Tetanus-Pertussis'), ('Pneumococcal', 'Pneumococcal'), ('Poliovirus', 'Poliovirus'), ('Influenza', 'Influenza'), ('Measles-Mumps-Rubella', 'Measles-Mumps-Rubella'), ('Other', 'Other')], max_length=256, verbose_name='Vaccine Name')),
                ('vaccinedatetime', models.DateTimeField(verbose_name='Vaccine date administered')),
                ('vaccinedose', models.CharField(max_length=256, verbose_name='Vaccine dose')),
                ('vaccinereason', models.CharField(blank=True, max_length=256, verbose_name='Vaccine Reason')),
                ('immunisationpriority', models.CharField(choices=[('Routine', 'Routine'), ('Urgent', 'Urgent'), ('Requested', 'Requested')], max_length=9, verbose_name='Immunisation priority')),
            ],
        ),
        migrations.CreateModel(
            name='Injection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('injectionname', models.CharField(max_length=256, verbose_name='Injection Name')),
                ('injectiondatetime', models.DateTimeField(verbose_name='Injection Date Administered')),
                ('injectionreason', models.CharField(blank=True, max_length=256, verbose_name='Injection Reason')),
                ('injectiondose', models.CharField(blank=True, max_length=256, verbose_name='Injection Dose (ml)')),
                ('injectionpriority', models.CharField(blank=True, choices=[('Routine', 'Routine'), ('Urgent', 'Urgent'), ('Requested', 'Requested')], max_length=256, verbose_name='Injection Priority')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicationname', models.CharField(max_length=256, verbose_name='Medication Name')),
                ('medstartdatetime', models.DateTimeField(verbose_name='Medication Start Date')),
                ('medenddatetime', models.DateTimeField(verbose_name='Medication End Date')),
                ('usage', models.CharField(blank=True, choices=[('With Food', 'With Food'), ('Without Food', 'Without Food'), ('NA', 'NA')], max_length=12, verbose_name='Medication Usage')),
                ('quantity', models.CharField(blank=True, max_length=256, verbose_name='Medication dose (mg)')),
                ('schedule', models.CharField(blank=True, max_length=256, verbose_name='Medication Schedule Frequency')),
            ],
        ),
        migrations.CreateModel(
            name='NationalEarlyWarningScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('respirationrate', models.CharField(blank=True, max_length=256, verbose_name='Respiration Rate')),
                ('oxygensaturation', models.CharField(blank=True, max_length=256, verbose_name='Oxygen Saturation Levels')),
                ('bloodpressure', models.CharField(blank=True, max_length=256, verbose_name='Blood Pressure')),
                ('heartrate', models.CharField(blank=True, max_length=256, verbose_name='Heart rate')),
                ('temperature', models.CharField(blank=True, max_length=256, verbose_name='Temperature')),
                ('bm', models.CharField(blank=True, max_length=256, verbose_name='Blood Monitoring Glucose (Diabetic)')),
            ],
        ),
        migrations.CreateModel(
            name='NotesAndScans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_name', models.CharField(max_length=85, verbose_name='Note Description')),
                ('notes', models.ImageField(upload_to='note_pics', verbose_name='Upload Note')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patienttitle', models.CharField(choices=[('MR', 'Mr.'), ('MRS', 'Mrs.'), ('MS', 'Ms.'), ('DR', 'Dr.'), ('SIR', 'Sir.')], max_length=4, verbose_name='Title')),
                ('patientuniqueid', models.CharField(max_length=10, unique=True, verbose_name='Patient ID')),
                ('patientfirstname', models.CharField(max_length=256, verbose_name='First Name')),
                ('patientlastname', models.CharField(max_length=256, verbose_name='Last Name')),
                ('patientpreferredname', models.CharField(blank=True, max_length=256, verbose_name='Preferred name')),
                ('dateofbirth', models.DateTimeField(verbose_name='DOB')),
                ('gender', models.CharField(choices=[('M', 'M'), ('F', 'F'), ('O', 'Other')], max_length=256, verbose_name='Gender')),
                ('weight', models.CharField(blank=True, max_length=256, verbose_name='Weight')),
                ('height', models.CharField(blank=True, max_length=256, verbose_name='Height')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('bmi', models.CharField(blank=True, max_length=256, verbose_name='BMI')),
                ('phonenumber', models.CharField(blank=True, max_length=256, verbose_name='Phone Number')),
                ('email', models.CharField(blank=True, max_length=256, verbose_name='Email')),
                ('dnr', models.NullBooleanField(verbose_name='DNR')),
                ('wardlocation', models.CharField(blank=True, max_length=256, verbose_name='Ward Location')),
                ('photo', models.ImageField(blank=True, default='default.png', upload_to='profile_pics', verbose_name='Photo')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.png', upload_to='profile_pics')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SocialDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupation', models.CharField(blank=True, max_length=256, verbose_name='Occupation')),
                ('smoking', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Smoker')),
                ('drink', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Drinker')),
                ('sexualorientation', models.CharField(blank=True, choices=[('Hetrosexual', 'Hetrosexual'), ('Homosexual', 'Homosexual'), ('Bisexual', 'Bisexual'), ('Prefer not to say', 'Prefer not to say')], max_length=17, verbose_name='Sexual Orientation')),
                ('socialdruguse', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Social Drug Use')),
                ('disability', models.CharField(blank=True, max_length=256, verbose_name='disabilities')),
                ('sexuallyactive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Prefer not to say', 'Prefer not to say')], max_length=10, verbose_name='Sexually Active')),
                ('personaldetails', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails')),
            ],
        ),
        migrations.CreateModel(
            name='TableData',
            fields=[
                ('tablename', models.AutoField(primary_key=True, serialize=False)),
                ('tabledescription', models.CharField(max_length=256)),
                ('rowcount', models.IntegerField()),
                ('importdatadatetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='TableError',
            fields=[
                ('tablename', models.AutoField(primary_key=True, serialize=False)),
                ('tabledescription', models.CharField(max_length=256)),
                ('error', models.CharField(max_length=256)),
                ('errordescription', models.CharField(max_length=256)),
                ('importdatadatetime', models.DateTimeField()),
            ],
        ),
        migrations.AddField(
            model_name='notesandscans',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='nationalearlywarningscore',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='medication',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='injection',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='immunisation',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='guardiandetails',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='familyhistory',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='diagnosishistory',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='assignedpatient',
            name='users',
            field=models.ManyToManyField(to='users.PersonalDetails'),
        ),
        migrations.AddField(
            model_name='allergydetails',
            name='personaldetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalDetails'),
        ),
    ]
